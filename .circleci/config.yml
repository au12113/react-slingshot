version: 2.1

commands:
  destroy_environments:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name my-stack
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name my-stack
      - run:
          name: generate inventory
          command: |
            echo '[all]' > inventory
            aws cloudformation list-exports \
              --query "Exports[?Name=='Udacity-PublicIp'].Value" \
              --no-paginate --output >> inventory

  run_ansible:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["2f:f4:27:a9:a8:ef:29:18:bb:b6:a4:8c:66:c3:8f:2d"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
            pip install cloudformation-cli-python-plugin
      - run:
          name: Configure server
          command: |
            cat inventory
            ansible-playbook -i inventory playbook.yml
  
  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: simulate error
          command: |
            return 1
      - destroy_environment
        when: on_fail
        
workflows:
  my_workflow:
    jobs:
      - create_infrastructure
      - run_ansible:
          requires: ['create_infrastructure']
      - smoke_test:
          requires: ['run_ansible']